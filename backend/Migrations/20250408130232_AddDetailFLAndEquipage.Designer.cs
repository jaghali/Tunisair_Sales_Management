// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TunisairSalesManagement.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250408130232_AddDetailFLAndEquipage")]
    partial class AddDetailFLAndEquipage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DetailFL", b =>
                {
                    b.Property<int>("NUMFL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NUMFL"));

                    b.Property<float>("CARBCOEFCONV")
                        .HasColumnType("real");

                    b.Property<int>("CARBCONSOM")
                        .HasColumnType("int");

                    b.Property<int>("CARBJAUGEARR")
                        .HasColumnType("int");

                    b.Property<int>("CARBJAUGEDEP")
                        .HasColumnType("int");

                    b.Property<int>("CARBRAV")
                        .HasColumnType("int");

                    b.Property<int>("CARBRAVKG")
                        .HasColumnType("int");

                    b.Property<string>("CARBRAVUNITE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CARBVOLPREC")
                        .HasColumnType("int");

                    b.Property<string>("CIE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DATEDEPPREV")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DATEVOL")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DATEVOLOP")
                        .HasColumnType("datetime2");

                    b.Property<int>("DUREEVOLAB")
                        .HasColumnType("int");

                    b.Property<int>("DUREEVOLBB")
                        .HasColumnType("int");

                    b.Property<string>("ESCALEARR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ESCALEDEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HEUREABARR")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HEUREABDEP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HEUREBBARR")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HEUREBBDEP")
                        .HasColumnType("datetime2");

                    b.Property<int>("MAT")
                        .HasColumnType("int");

                    b.Property<int>("NUMORDRE")
                        .HasColumnType("int");

                    b.Property<string>("NUMVOL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VOLOPERATIONNEL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NUMFL");

                    b.ToTable("DetailFLs");
                });

            modelBuilder.Entity("Equipage", b =>
                {
                    b.Property<int>("MAT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MAT"));

                    b.Property<string>("CLE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FONCTION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NUMFL")
                        .HasColumnType("int");

                    b.Property<string>("PILOTEENVOL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MAT");

                    b.HasIndex("NUMFL");

                    b.ToTable("Equipages");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.Articles", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FournisseurId")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.HasIndex("FournisseurId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.Devise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Devises");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.EnteteOffre", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AGENT_SAISIE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AIROPORT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AVION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CC1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CC2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DATE_EDITION")
                        .HasColumnType("datetime2");

                    b.Property<string>("FL01")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FL02")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FL03")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOM1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOM2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NUMERO_ETAT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNC1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNC2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EnteteOffre");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.EnteteVente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AGENT_SAISIE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AIROPORT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AVION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CC1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CC2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DATE_EDITION")
                        .HasColumnType("datetime2");

                    b.Property<string>("FL01")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FL02")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FL03")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOM1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOM2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NUMERO_ETAT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNC1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNC2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EnteteVente");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.EtatOffresArrivee", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantiteDotation")
                        .HasColumnType("int");

                    b.Property<int>("QuantiteOfferte")
                        .HasColumnType("int");

                    b.Property<int>("Restant")
                        .HasColumnType("int");

                    b.Property<int>("TotEm")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("EtatOffresArrivee");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.EtatOffresDepart", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantiteDotation")
                        .HasColumnType("int");

                    b.Property<int>("QuantiteOfferte")
                        .HasColumnType("int");

                    b.Property<int>("Restant")
                        .HasColumnType("int");

                    b.Property<int>("TotEm")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("EtatOffresDepart");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.EtatVentesArrivee", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrixUnitaireHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantiteDotation")
                        .HasColumnType("int");

                    b.Property<int>("QuantiteVendue")
                        .HasColumnType("int");

                    b.Property<int>("Restant")
                        .HasColumnType("int");

                    b.Property<decimal>("TotEm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Valeur")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Code");

                    b.ToTable("EtatVentesArrivee");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.EtatVentesDepart", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrixUnitaireHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QtCompJ")
                        .HasColumnType("int");

                    b.Property<int>("QtDotation")
                        .HasColumnType("int");

                    b.Property<int>("QuantiteCasse")
                        .HasColumnType("int");

                    b.Property<int>("QuantiteOffre")
                        .HasColumnType("int");

                    b.Property<int>("QuantiteVente")
                        .HasColumnType("int");

                    b.Property<int>("Restant")
                        .HasColumnType("int");

                    b.Property<int>("TotEm")
                        .HasColumnType("int");

                    b.Property<decimal>("Valeur")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Code");

                    b.ToTable("EtatVentesDepart");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.Fournisseur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fournisseurs");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.ListeEquipageO", b =>
                {
                    b.Property<string>("MATRICULE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DESTINATION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DONNEES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MATRICULE");

                    b.ToTable("ListeEquipageO");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.ListeEquipageV", b =>
                {
                    b.Property<string>("MATRICULE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DESTINATION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DONNEES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MATRICULE");

                    b.ToTable("ListeEquipageV");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.PN", b =>
                {
                    b.Property<string>("MATRICULE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BASE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COLLEGE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SECTEUR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MATRICULE");

                    b.ToTable("PN");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.PrixArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateArrivee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeviseId")
                        .HasColumnType("int");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleCode");

                    b.HasIndex("DeviseId");

                    b.ToTable("PrixArticles");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.Utilisateur", b =>
                {
                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Matricule");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("Equipage", b =>
                {
                    b.HasOne("DetailFL", "DetailFL")
                        .WithMany("Equipages")
                        .HasForeignKey("NUMFL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetailFL");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.Articles", b =>
                {
                    b.HasOne("TunisairSalesManagement.Models.Fournisseur", "Fournisseur")
                        .WithMany("Articles")
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.PrixArticle", b =>
                {
                    b.HasOne("TunisairSalesManagement.Models.Articles", "Article")
                        .WithMany("PrixArticles")
                        .HasForeignKey("ArticleCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TunisairSalesManagement.Models.Devise", "Devise")
                        .WithMany("PrixArticles")
                        .HasForeignKey("DeviseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Devise");
                });

            modelBuilder.Entity("DetailFL", b =>
                {
                    b.Navigation("Equipages");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.Articles", b =>
                {
                    b.Navigation("PrixArticles");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.Devise", b =>
                {
                    b.Navigation("PrixArticles");
                });

            modelBuilder.Entity("TunisairSalesManagement.Models.Fournisseur", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
